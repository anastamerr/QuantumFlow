import { GateDefinition } from '../types/circuit'

// Define the quantum gate library with all available gates
export const gateLibrary: GateDefinition[] = [
  // Single-qubit gates
  {
    id: 'h',
    name: 'Hadamard',
    symbol: 'H',
    description: 'Creates superposition by placing a qubit in an equal superposition of |0⟩ and |1⟩',
    category: 'Single-Qubit Gates',
    color: 'blue',
  },
  {
    id: 'x',
    name: 'Pauli-X',
    symbol: 'X',
    description: 'Quantum equivalent of the NOT gate, flips the state of a qubit',
    category: 'Single-Qubit Gates',
    color: 'red',
  },
  {
    id: 'y',
    name: 'Pauli-Y',
    symbol: 'Y',
    description: 'Rotates the qubit state around the Y-axis of the Bloch sphere',
    category: 'Single-Qubit Gates',
    color: 'green',
  },
  {
    id: 'z',
    name: 'Pauli-Z',
    symbol: 'Z',
    description: 'Rotates the qubit state around the Z-axis of the Bloch sphere',
    category: 'Single-Qubit Gates',
    color: 'purple',
  },
  {
    id: 's',
    name: 'S Gate',
    symbol: 'S',
    description: 'Phase gate, rotates the qubit state by 90 degrees around the Z-axis',
    category: 'Single-Qubit Gates',
    color: 'teal',
  },
  {
    id: 't',
    name: 'T Gate',
    symbol: 'T',
    description: 'Phase gate, rotates the qubit state by 45 degrees around the Z-axis',
    category: 'Single-Qubit Gates',
    color: 'cyan',
  },
  {
    id: 'rx',
    name: 'RX Gate',
    symbol: 'RX',
    description: 'Rotation around the X-axis of the Bloch sphere',
    category: 'Rotation Gates',
    color: 'orange',
    params: [
      {
        name: 'theta',
        type: 'angle',
        default: 0,
        min: 0,
        max: 360,
        step: 1,
      },
    ],
  },
  {
    id: 'ry',
    name: 'RY Gate',
    symbol: 'RY',
    description: 'Rotation around the Y-axis of the Bloch sphere',
    category: 'Rotation Gates',
    color: 'orange',
    params: [
      {
        name: 'theta',
        type: 'angle',
        default: 0,
        min: 0,
        max: 360,
        step: 1,
      },
    ],
  },
  {
    id: 'rz',
    name: 'RZ Gate',
    symbol: 'RZ',
    description: 'Rotation around the Z-axis of the Bloch sphere',
    category: 'Rotation Gates',
    color: 'orange',
    params: [
      {
        name: 'phi',
        type: 'angle',
        default: 0,
        min: 0,
        max: 360,
        step: 1,
      },
    ],
  },
  {
    id: 'p',
    name: 'Phase Gate',
    symbol: 'P',
    description: 'Applies a phase shift',
    category: 'Rotation Gates',
    color: 'pink',
    params: [
      {
        name: 'phi',
        type: 'angle',
        default: 0,
        min: 0,
        max: 360,
        step: 1,
      },
    ],
  },
  
  // Multi-qubit gates
  {
    id: 'cnot',
    name: 'CNOT',
    symbol: 'CX',
    description: 'Controlled-NOT gate, flips the target qubit if the control qubit is |1⟩',
    category: 'Multi-Qubit Gates',
    color: 'yellow',
    targets: 1,
    controls: 1,
  },
  {
    id: 'cz',
    name: 'CZ Gate',
    symbol: 'CZ',
    description: 'Controlled-Z gate, applies a Z gate on the target qubit if the control qubit is |1⟩',
    category: 'Multi-Qubit Gates',
    color: 'yellow',
    targets: 1,
    controls: 1,
  },
  {
    id: 'swap',
    name: 'SWAP',
    symbol: 'SWAP',
    description: 'Swaps the states of two qubits',
    category: 'Multi-Qubit Gates',
    color: 'gray',
    targets: 2,
  },
  {
    id: 'toffoli',
    name: 'Toffoli',
    symbol: 'CCX',
    description: 'Controlled-Controlled-NOT gate, applies X on target if both controls are |1⟩',
    category: 'Multi-Qubit Gates',
    color: 'yellow',
    targets: 1,
    controls: 2,
  },
  
  // Measurement
  {
    id: 'measure',
    name: 'Measure',
    symbol: 'M',
    description: 'Measures the qubit in the computational basis',
    category: 'Measurement',
    color: 'gray',
  },
  
  // Algorithm building blocks
  {
    id: 'qft',
    name: 'QFT',
    symbol: 'QFT',
    description: 'Quantum Fourier Transform, a key component in many quantum algorithms',
    category: 'Algorithm Blocks',
    color: 'blue',
    targets: 1,
  },
  {
    id: 'iqft',
    name: 'Inverse QFT',
    symbol: 'QFT†',
    description: 'Inverse Quantum Fourier Transform',
    category: 'Algorithm Blocks',
    color: 'blue',
    targets: 1,
  },
]